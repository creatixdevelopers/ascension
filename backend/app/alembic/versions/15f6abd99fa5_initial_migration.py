"""initial migration

Revision ID: 15f6abd99fa5
Revises: 
Create Date: 2025-04-09 02:12:05.522259

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '15f6abd99fa5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_permission')),
    sa.UniqueConstraint('name', name=op.f('uq_permission_name'))
    )
    op.create_table('quiz',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.String(length=23), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_quiz'))
    )
    op.create_index(op.f('ix_quiz_uid'), 'quiz', ['uid'], unique=True)
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role')),
    sa.UniqueConstraint('name', name=op.f('uq_role_name'))
    )
    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], name=op.f('fk_role_permissions_permission_id_permission')),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('fk_role_permissions_role_id_role')),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', name=op.f('pk_role_permissions'))
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.String(length=23), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('phone', sa.String(length=16), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('fk_user_role_id_role')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('email', name=op.f('uq_user_email'))
    )
    op.create_index(op.f('ix_user_uid'), 'user', ['uid'], unique=True)
    op.create_table('payment',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('payment_id', sa.String(), nullable=False),
    sa.Column('type', sa.String(length=16), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('valid_until', sa.DateTime(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_payment_user_id_user')),
    sa.PrimaryKeyConstraint('user_id', 'payment_id', name=op.f('pk_payment'))
    )
    op.create_index(op.f('ix_payment_user_id'), 'payment', ['user_id'], unique=False)
    op.create_table('response',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.String(length=23), nullable=False),
    sa.Column('quiz_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.id'], name=op.f('fk_response_quiz_id_quiz')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_response_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_response'))
    )
    op.create_index(op.f('ix_response_quiz_id'), 'response', ['quiz_id'], unique=False)
    op.create_index(op.f('ix_response_uid'), 'response', ['uid'], unique=True)
    op.create_index(op.f('ix_response_user_id'), 'response', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_response_user_id'), table_name='response')
    op.drop_index(op.f('ix_response_uid'), table_name='response')
    op.drop_index(op.f('ix_response_quiz_id'), table_name='response')
    op.drop_table('response')
    op.drop_index(op.f('ix_payment_user_id'), table_name='payment')
    op.drop_table('payment')
    op.drop_index(op.f('ix_user_uid'), table_name='user')
    op.drop_table('user')
    op.drop_table('role_permissions')
    op.drop_table('role')
    op.drop_index(op.f('ix_quiz_uid'), table_name='quiz')
    op.drop_table('quiz')
    op.drop_table('permission')
    # ### end Alembic commands ###
